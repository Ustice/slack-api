{
  "api": {
    "test": {
      "url": "https://slack.com/api/api.test",
      "description": "Checks API calling code. Any arguments passed into this method are returned.",
      "help": "https://api.slack.com/methods/api.test",
      "arguments": {
        "error": {
          "required": false,
          "description": "Error response to return"
        }
      },
      "errors": {}
    }
  },
  "auth": {
    "test": {
      "url": "https://slack.com/api/auth.test",
      "description": "This method checks authentication and tells you who you are.",
      "help": "https://api.slack.com/methods/auth.test",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: identify)"
        }
      },
      "errors": {
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    }
  },
  "channels": {
    "archive": {
      "url": "https://slack.com/api/channels.archive",
      "description": "This method archives a channel.",
      "help": "https://api.slack.com/methods/channels.archive",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Channel to archive"
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "already_archived'": "Channel has already been archived.",
        "cant_archive_general'": "You cannot archive the general channel.",
        "last_ra_channel'": "You cannot archive the last channel for a restricted account",
        "restricted_action'": "A team preference prevents the authenticated user from archiving.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_restricted'": "This method cannot be called by a restricted user or single channel guest."
      }
    },
    "create": {
      "url": "https://slack.com/api/channels.create",
      "description": "This method is used to create a channel.",
      "help": "https://api.slack.com/methods/channels.create",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "name": {
          "required": true,
          "description": "Name of channel to create"
        }
      },
      "errors": {
        "name_taken'": "A channel cannot be created with the given name.",
        "restricted_action'": "A team preference prevents the authenticated user from creating channels.",
        "no_channel'": "Value passed for name was empty.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_restricted'": "This method cannot be called by a restricted user or single channel guest."
      }
    },
    "history": {
      "url": "https://slack.com/api/channels.history",
      "description": "This method returns a portion of messages/events from the specified channel. To read the entire history for a channel, call the method with no latest or oldest arguments, and then continue paging using the instructions below.",
      "help": "https://api.slack.com/methods/channels.history",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "channel": {
          "required": true,
          "description": "Channel to fetch history for."
        },
        "latest": {
          "required": false,
          "description": "Latest message timestamp to include in results."
        },
        "oldest": {
          "required": false,
          "description": "Oldest message timestamp to include in results."
        },
        "count": {
          "required": false,
          "description": "Number of messages to return, between 1 and 1000."
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "invalid_ts_latest'": "Value passed for latest was invalid",
        "invalid_ts_oldest'": "Value passed for oldest was invalid",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    },
    "info": {
      "url": "https://slack.com/api/channels.info",
      "description": "This method returns information about a team channel.",
      "help": "https://api.slack.com/methods/channels.info",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "channel": {
          "required": true,
          "description": "Channel to get info on"
        }
      },
      "error": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    },
    "invite": {
      "url": "https://slack.com/api/channels.invite",
      "description": "This method is used to invite a user to a channel. The calling user must be a member of the channel.",
      "help": "https://api.slack.com/methods/channels.invite",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Channel to invite user to."
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "user_not_found'": "Value passed for user was invalid.",
        "cant_invite_self'": "Authenticated user cannot invite themselves to a channel.",
        "not_in_channel'": "Authenticated user is not in the channel.",
        "already_in_channel'": "Invited user is already in the channel.",
        "is_archived'": "Channel has been archived.",
        "cant_invite'": "User cannot be invited to this channel.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_ultra_restricted'": "This method cannot be called by a single channel guest."
      }
    },
    "join": {
      "url": "https://slack.com/api/channels.join",
      "description": "This method is used to join a channel. If the channel does not exist, it is created.",
      "help": "https://api.slack.com/methods/channels.join",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "name": {
          "required": true,
          "description": "Name of channel to join"
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "name_taken'": "A channel cannot be created with the given name.",
        "restricted_action'": "A team preference prevents the authenticated user from creating channels.",
        "no_channel'": "Value passed for name was empty.",
        "is_archived'": "Channel has been archived.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_restricted'": "This method cannot be called by a restricted user or single channel guest."
      }
    },
    "kick": {
      "url": "https://slack.com/api/channels.kick",
      "description": "This method allows a user to remove another member from a team channel.",
      "help": "https://api.slack.com/methods/channels.kick",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Channel to remove user from."
        },
        "user": {
          "required": true,
          "description": "User to remove from channel."
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "user_not_found'": "Value passed for user was invalid.",
        "cant_kick_self'": "Authenticated user can't kick themselves from a channel.",
        "not_in_channel'": "User was not in the channel.",
        "cant_kick_from_general'": "User cannot be removed from #general.",
        "cant_kick_from_last_channel'": "User cannot be removed from the last channel they're in.",
        "restricted_action'": "A team preference prevents the authenticated user from kicking.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_restricted'": "This method cannot be called by a restricted user or single channel guest."
      }
    },
    "leave": {
      "url": "https://slack.com/api/channels.leave",
      "description": "This method is used to leave a channel.",
      "help": "https://api.slack.com/methods/channels.leave",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Channel to leave"
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "is_archived'": "Channel has been archived.",
        "cant_leave_general'": "Authenticated user cannot leave the general channel.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_restricted'": "This method cannot be called by a restricted user or single channel guest."
      }
    },
    "list": {
      "url": "https://slack.com/api/channels.list",
      "description": "This method returns a list of all channels in the team. This includes channels the caller is in, channels they are not currently in, and archived channels. The number of (non-deactivated) members in each channel is also returned.",
      "help": "https://api.slack.com/methods/channels.list",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "exclude_archived": {
          "required": false,
          "description": "Don't return archived channels."
        }
      },
      "errors": {
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    },
    "mark": {
      "url": "https://slack.com/api/channels.mark",
      "description": "This method moves the read cursor in a channel.",
      "help": "https://api.slack.com/methods/channels.mark",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Channel to set reading cursor in."
        },
        "ts": {
          "required": true,
          "description": "Timestamp of the most recently seen message."
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "not_in_channel'": "Caller is not a member of the channel.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    },
    "rename": {
      "url": "https://slack.com/api/channels.rename",
      "description": "This method renames a team channel.\nThe only people who can rename a channel are team admins, or the person that originally created the channel. Others will recieve a `not_authorized` error.",
      "help": "https://api.slack.com/methods/channels.rename",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Channel to rename"
        },
        "name": {
          "required": true,
          "description": "New name for channel."
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "not_in_channel'": "Caller is not a member of the channel.",
        "not_authorized'": "Caller cannot rename this channel",
        "invalid_name'": "New name is invalid",
        "name_taken'": "New channel name is taken",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_restricted'": "This method cannot be called by a restricted user or single channel guest."
      }
    },
    "setPurpose": {
      "url": "https://slack.com/api/channels.setPurpose",
      "description": "This method is used to change the purpose of a channel. The calling user must be a member of the channel.",
      "help": "https://api.slack.com/methods/channels.setPurpose",
      "arguments": {
        "token": {
          "required": true,
          "desciption": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Channel to set the purpose of"
        },
        "purpose": {
          "required": true,
          "description": "The new purpose"
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "not_in_channel'": "Authenticated user is not in the channel.",
        "is_archived'": "Channel has been archived.",
        "too_long'": "Purpose was longer than 250 characters.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_restricted'": "This method cannot be called by a restricted user or single channel guest."
      }
    },
    "setTopic": {
      "url": "https://slack.com/api/channels.setTopic",
      "description": "This method is used to change the topic of a channel. The calling user must be a member of the channel.",
      "help": "https://api.slack.com/methods/channels.setTopic",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Channel to set the topic of"
        },
        "topic": {
          "required": true,
          "description": "The new topic"
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "not_in_channel'": "Authenticated user is not in the channel.",
        "is_archived'": "Channel has been archived.",
        "too_long'": "Topic was longer than 250 characters.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_restricted'": "This method cannot be called by a restricted user or single channel guest."
      }
    },
    "unarchive": {
      "url": "https://slack.com/api/channels.unarchive",
      "description": "This method unarchives a channel. The calling user is added to the channel.",
      "help": "https://api.slack.com/methods/channels.unarchive",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Channel to unarchive"
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "not_archived'": "Channel is not archived.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_restricted'": "This method cannot be called by a restricted user or single channel guest."
      }
    }
  },
  "chat": {
    "delete": {
      "url": "https://slack.com/api/chat.delete",
      "description": "This method deletes a message from a channel.",
      "help": "https://api.slack.com/methods/chat.delete",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "ts": {
          "required": true,
          "description": "Timestamp of the message to be deleted."
        },
        "channel": {
          "required": true,
          "description": "Channel to unarchive"
        }
      },
      "errors": {
        "message_not_found'": "No message exists with the requested timestamp.",
        "channel_not_found'": "Value passed for channel was invalid.",
        "cant_delete_message'": "Authenticated user does not have permission to delete this message.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    },
    "postMessage": {
      "url": "https://slack.com/api/chat.postMessage",
      "description": "Sends a message to a channel.",
      "help": "https://api.slack.com/methods/chat.postMessage",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Channel to send message to. Can be a public channel, private group or IM channel. Can be an encoded ID, or a name."
        },
        "text": {
          "required": true,
          "description": "Text of the message to send. See below for an explanation of formatting."
        },
        "username": {
          "required": false,
          "description": "Name of bot."
        },
        "parse": {
          "required": false,
          "description": "Change how messages are treated."
        },
        "link_names": {
          "required": false,
          "description": "Find and link channel names and usernames."
        },
        "attachments": {
          "required": false,
          "description": "Structured message attachments."
        },
        "unfurl_links": {
          "required": false,
          "description": "Pass true to enable unfurling of primarily text-based content."
        },
        "unfurl_media": {
          "required": false,
          "description": "Pass false to disable unfurling of media content."
        },
        "icon_url": {
          "required": false,
          "description": "URL to an image to use as the icon for this message"
        },
        "icon_emoji": {
          "required": false,
          "description": "emoji to use as the icon for this message. Overrides icon_url."
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "is_archived'": "Channel has been archived.",
        "msg_too_long'": "Message text is too long",
        "no_text'": "No message text provided",
        "rate_limited'": "Application has posted too many messages, read the Rate Limit documentation for more information",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user."
      }
    },
    "update": {
      "url": "https://slack.com/api/chat.update",
      "description": "This method updates a message in a channel.",
      "help": "https://api.slack.com/methods/chat.update",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "ts": {
          "required": true,
          "description": "Timestamp of the message to be updated."
        },
        "channel": {
          "required": true,
          "description": "Channel containing the message to be updated."
        },
        "text": {
          "required": true,
          "description": "New text for the message, using the default formatting rules."
        }
      },
      "errors": {
        "message_not_found'": "No message exists with the requested timestamp.",
        "cant_update_message'": "Authenticated user does not have permission to update this message.",
        "channel_not_found'": "Value passed for channel was invalid.",
        "edit_window_closed'": "The message cannot be edited due to the team message edit settings",
        "msg_too_long'": "Message text is too long",
        "no_text'": "No message text provided",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    }
  },
  "emoji": {
    "list": {
      "url": "https://slack.com/api/emoji.list",
      "description": "This method lists the custom emoji for a team.",
      "help": "https://api.slack.com/methods/emoji.list",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        }
      },
      "errors": {
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    }
  },
  "files": {
    "info": {
      "url": "https://slack.com/api/files.info",
      "description": "This method returns information about a file in your team.",
      "help": "https://api.slack.com/methods/files.info",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "file": {
          "required": true,
          "description": "File to fetch info for"
        },
        "count": {
          "required": false,
          "description": "Number of items to return per page."
        },
        "page": {
          "required": false,
          "description": "Page number of results to return."
        }
      },
      "errors": {
        "file_not_found'": "Value passed for file was invalid",
        "file_deleted'": "The requested file has been deleted",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user."
      }
    },
    "delete": {
      "url": "https://slack.com/api/files.delete",
      "description": "This method deletes a file in your team.",
      "help": "https://api.slack.com/methods/files.delete",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "file": {
          "required": true,
          "description": "ID of file to delete."
        }
      },
      "errors": {
        "file_not_found'": "The file does not exist, or is not visible to the calling user.",
        "file_deleted": "The file has already been deleted.",
        "cant_delete_file": "Authenticated user does not have permission to delete this file.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive": "Authentication token is for a deleted user or team.",
        "user_is_bot": "This method cannot be called by a bot user."
      }
    },
    "list": {
      "url": "https://slack.com/api/files.list",
      "description": "Lists & filters team files.",
      "help": "https://api.slack.com/methods/files.list",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "user": {
          "required": false,
          "description": "Filter files created by a single user."
        },
        "ts_from": {
          "required": false,
          "description": "Filter files created after this timestamp (inclusive)."
        },
        "ts_to": {
          "required": false,
          "description": "Filter files created before this timestamp (inclusive)."
        },
        "types": {
          "required": false,
          "description": "Filter files by type:\n\nall - All files\nposts - Posts\nsnippets - Snippets\nimages - Image files\ngdocs - Google docs\nzips - Zip files\npdfs - PDF files\n\nYou can pass multiple values in the types argument, like types=posts,snippets.The default value is all, which does not filter the list."
        },
        "count": {
          "required": false,
          "description": "Number of items to return per page."
        },
        "page": {
          "required": false,
          "description": "Page number of results to return."
        }
      },
      "errors": {
        "user_not_found'": "Value passed for user was invalid",
        "unknown_type'": "Value passed for types was invalid",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user."
      }
    },
    "upload": {
      "url": "https://slack.com/api/files.upload",
      "description": "This method allows you to create or upload an existing file.",
      "help": "https://api.slack.com/methods/files.upload",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "file": {
          "required": false,
          "description": "File contents via multipart/form-data."
        },
        "content": {
          "required": false,
          "description": "File contents via a POST var."
        },
        "filetype": {
          "required": false,
          "description": "Slack-internal file type identifier."
        },
        "title": {
          "required": false,
          "description": "Title of file."
        },
        "initial_comment": {
          "required": false,
          "description": "Initial comment to add to file."
        },
        "channels": {
          "required": false,
          "description": "Comma separated list of channels to share the file into."
        }
      },
      "errors": {
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user."
      }
    }
  },
  "groups": {
    "archive": {
      "url": "https://slack.com/api/groups.archive",
      "description": "This method archives a private group.",
      "help": "https://api.slack.com/methods/groups.archive",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Private group to archive"
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "already_archived'": "Group has already been archived.",
        "group_contains_others'": "Restricted accounts cannot archive groups containing others.",
        "last_ra_channel'": "You cannot archive the last channel for a restricted account.",
        "restricted_action'": "A team preference prevents the authenticated user from archiving.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_ultra_restricted'": "This method cannot be called by a single channel guest."
      }
    },
    "close": {
      "url": "https://slack.com/api/groups.close",
      "description": "This method closes a private group.",
      "help": "https://api.slack.com/methods/groups.close",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Private group to close"
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    },
    "create": {
      "url": "https://slack.com/api/groups.create",
      "description": "This method creates a private group.",
      "help": "https://api.slack.com/methods/groups.create",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "name": {
          "required": true,
          "description": "Name of group to create"
        }
      },
      "errors": {
        "no_channel'": "No group name was passed.",
        "restricted_action'": "A team preference prevents the authenticated user from creating groups.",
        "name_taken'": "A group cannot be created with the given name.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_ultra_restricted'": "This method cannot be called by a single channel guest."
      }
    },
    "createChild": {
      "url": "https://slack.com/api/groups.createChild",
      "description": "This method takes an existing private group and performs the following steps:\n\nRenames the existing group (from `example` to `example-archived`).\nArchives the existing group.\nCreates a new group with the name of the existing group.\nAdds all members of the existing group to the new group.\nThis is useful when inviting a new member to an existing group while hiding all previous chat history from them. In this scenario you can call groups.createChild followed by groups.invite.\n\nThe new group will have a special parent_group property pointing to the original archived group. This will only be returned for members of both groups, so will not be visible to any newly invited members.",
      "help": "https://api.slack.com/methods/groups.createChild",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Group to clone and archive."
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "already_archived'": "An archived group cannot be cloned",
        "restricted_action'": "A team preference prevents the authenticated user from creating groups.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_ultra_restricted'": "This method cannot be called by a single channel guest."
      }
    },
    "history": {
      "url": "https://slack.com/api/groups.history",
      "description": "This method returns a portion of messages/events from the specified private group. To read the entire history for a group, call the method with no latest or oldest arguments, and then continue paging using the instructions below.",
      "help": "https://api.slack.com/methods/groups.history",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "channel": {
          "required": true,
          "description": "Group to fetch history for."
        },
        "latest": {
          "required": false,
          "description": "Latest message timestamp to include in results."
        },
        "oldest": {
          "required": false,
          "description": "Oldest message timestamp to include in results."
        },
        "count": {
          "required": false,
          "description": "Number of messages to return, between 1 and 1000."
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "invalid_ts_latest'": "Value passed for latest was invalid",
        "invalid_ts_oldest'": "Value passed for oldest was invalid",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    },
    "info": {
      "url": "https://slack.com/api/groups.info",
      "description": "This method returns information about a private channel.",
      "help": "https://api.slack.com/methods/groups.info",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "channel": {
          "required": true,
          "description": "Private channel to get info on"
        }
      },
      "error": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    },
    "invite": {
      "url": "https://slack.com/api/groups.invite",
      "description": "This method is used to invite a user to a private group. The calling user must be a member of the group.\n\nTo invite a new member to a group without giving them access to the archives of the group call the groups.createChild method before inviting.",
      "help": "https://api.slack.com/methods/groups.invite",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Private group to invite user to."
        },
        "user": {
          "required": true,
          "description": "User to invite."
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "user_not_found'": "Value passed for user was invalid.",
        "cant_invite_self'": "Authenticated user cannot invite themselves to a group.",
        "is_archived'": "Group has been archived.",
        "cant_invite'": "User cannot be invited to this group.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_ultra_restricted'": "This method cannot be called by a single channel guest."
      }
    },
    "kick": {
      "url": "https://slack.com/api/groups.kick",
      "description": "This method allows a user to remove another member from a private group.",
      "help": "https://api.slack.com/methods/groups.kick",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Group to remove user from."
        },
        "user": {
          "required": true,
          "description": "User to remove from group."
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "user_not_found'": "Value passed for user was invalid.",
        "cant_kick_self'": "You can't remove yourself from a group",
        "not_in_group'": "User or caller were are not in the group",
        "restricted_action'": "A team preference prevents the authenticated user from kicking.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_restricted'": "This method cannot be called by a restricted user or single channel guest."
      }
    },
    "leave": {
      "url": "https://slack.com/api/groups.leave",
      "description": "This method is used to leave a private group.",
      "help": "https://api.slack.com/methods/groups.leave",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Group to leave."
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "is_archived'": "Group has been archived.",
        "cant_leave_last_channel'": "Authenticated user cannot leave the last channel they are in",
        "last_member'": "Authenticated user is the last member of a group and cannot leave it",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_ultra_restricted'": "This method cannot be called by a single channel guest."
      }
    },
    "list": {
      "url": "https://slack.com/api/groups.list",
      "description": "This method returns a list of groups in the team that the caller is in and archived groups that the caller was in. The list of (non-deactivated) members in each group is also returned.",
      "help": "https://api.slack.com/methods/groups.list",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "exclude_archived": {
          "required": false,
          "description": "Don't return archived groups."
        }
      },
      "errors": {
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user."
      }
    },
    "mark": {
      "url": "https://slack.com/api/groups.mark",
      "description": "This method moves the read cursor in a private group.",
      "help": "https://api.slack.com/methods/groups.mark",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Group to set reading cursor in."
        },
        "ts": {
          "required": true,
          "description": "Timestamp of the most recently seen message."
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "not_in_channel'": "Caller is not a member of the channel.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    },
    "open": {
      "url": "https://slack.com/api/groups.open",
      "description": "This method opens a private group.",
      "help": "https://api.slack.com/methods/groups.open",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "channel": {
          "required": true,
          "description": "Group to open."
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team"
      }
    },
    "rename": {
      "url": "https://slack.com/api/groups.rename",
      "description": "This method renames a private group.",
      "help": "https://api.slack.com/methods/groups.rename",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Group to rename."
        },
        "name": {
          "required": true,
          "description": "New name for group."
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "invalid_name'": "New name is invalid",
        "name_taken'": "New channel name is taken",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_restricted'": "This method cannot be called by a restricted user or single channel guest."
      }
    },
    "setPurpose": {
      "url": "https://slack.com/api/groups.setPurpose",
      "description": "This method is used to change the purpose of a private group. The calling user must be a member of the private group.",
      "help": "https://api.slack.com/methods/groups.setPurpose",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Private group to set the purpose of"
        },
        "name": {
          "required": true,
          "description": "The new purpose"
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "not_in_channel'": "Authenticated user is not in the private group.",
        "is_archived'": "Private group has been archived",
        "too_long'": "Purpose was longer than 250 characters.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_restricted'": "This method cannot be called by a restricted user or single channel guest."
      }
    },
    "setTopic": {
      "url": "https://slack.com/api/groups.setPurpose",
      "description": "This method is used to change the purpose of a private group. The calling user must be a member of the private group.",
      "help": "https://api.slack.com/methods/groups.setTopic",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Private group to set the purpose of"
        },
        "purpose": {
          "required": true,
          "description": "The new purpose"
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "not_in_channel'": "Authenticated user is not in the private group.",
        "is_archived'": "Private group has been archived",
        "too_long'": "Purpose was longer than 250 characters.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_restricted'": "This method cannot be called by a restricted user or single channel guest."
      }
    },
    "unarchive": {
      "url": "https://slack.com/api/groups.unarchive",
      "description": "This method unarchives a private group.",
      "help": "https://api.slack.com/methods/groups.unarchive",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Group to unarchive"
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "not_archived'": "Group is not archived.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user.",
        "user_is_restricted'": "This method cannot be called by a restricted user or single channel guest."
      }
    }
  },
  "im": {
    "close": {
      "url": "https://slack.com/api/im.close",
      "description": "Close a direct message channel.",
      "help": "https://api.slack.com/methods/im.close",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Direct message channel to close."
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "user_does_not_own_channel'": "Calling user does not own this DM channel.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    },
    "history": {
      "url": "https://slack.com/api/im.history",
      "description": "This method returns a portion of messages/events from the specified direct message channel. To read the entire history for a direct message channel, call the method with no `latest` or `oldest` arguments, and then continue paging using the instructions below.",
      "help": "https://api.slack.com/methods/im.history",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "channel": {
          "required": true,
          "description": "Direct message channel to fetch history for."
        },
        "latest": {
          "required": false,
          "description": "Latest message timestamp to include in results."
        },
        "oldest": {
          "required": false,
          "description": "Oldest message timestamp to include in results."
        },
        "count": {
          "required": false,
          "description": "Number of messages to return, between 1 and 1000."
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "invalid_ts_latest'": "Value passed for latest was invalid",
        "invalid_ts_oldest'": "Value passed for oldest was invalid",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    },
    "list": {
      "url": "https://slack.com/api/im.list",
      "description": "This method returns a list of all im channels that the user has.",
      "help": "https://api.slack.com/methods/im.list",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        }
      },
      "errors": {
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user."
      }
    },
    "mark": {
      "url": "https://slack.com/api/im.mark",
      "description": "This method moves the read cursor in a direct message channel.",
      "help": "https://api.slack.com/methods/im.mark",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "channel": {
          "required": true,
          "description": "Direct message channel to set reading cursor in."
        },
        "ts": {
          "required": true,
          "description": "Timestamp of the most recently seen message."
        }
      },
      "errors": {
        "channel_not_found'": "Value passed for channel was invalid.",
        "not_in_channel'": "Caller is not a member of the channel.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    },
    "open": {
      "url": "https://slack.com/api/im.open",
      "description": "Opens a direct message channel.",
      "help": "https://api.slack.com/methods/im.open",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "user": {
          "required": true,
          "description": "User to open a direct message channel with."
        }
      },
      "errors": {
        "user_not_found'": "Value passed for user was invalid.",
        "user_not_visible'": "The calling user is restricted from seeing the requested user.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    }
  },
  "oauth": {
    "access": {
      "url": "https://slack.com/api/oauth.access",
      "description": "This method allows you to exchange a temporary OAuth `code` for an API access token. This is used as part of the OAuth authentication flow.",
      "help": "https://api.slack.com/methods/oauth.access",
      "arguments": {
        "client_id": {
          "required": true,
          "description": "Issued when you created your application."
        },
        "client_secret": {
          "required": true,
          "description": "Issued when you created your application."
        },
        "code": {
          "required": true,
          "description": "The code param returned via the OAuth callback."
        },
        "redirect_uri": {
          "required": false,
          "description": "This must match the originally submitted URI (if one was sent)."
        }
      },
      "errors": {
        "invalid_client_id'": "Value passed for client_id was invalid.",
        "bad_client_secret'": "Value passed for client_secret was invalid.",
        "invalid_code'": "Value passed for code was invalid.",
        "bad_redirect_uri'": "Value passed for redirect_uri did not match the redirect_uri in the original request."
      }
    }
  },
  "reactions": {
    "add": {
      "url": "https://slack.com/api/reactions.add",
      "description": "Add a react. Refer to the RTM API documentation for full details on how to use the RTM API.",
      "help": "https://api.slack.com/methods/reactions.add",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: client)"
        },
        "name": {
          "required": true,
          "description": "reaction name"
        },
        "channel": {
          "required": false,
          "description": "channel"
        },
        "timestamp": {
          "required": false,
          "description": "timestamp"
        }
      },
      "errors": {
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    },
    "get": {
      "url": "https://slack.com/api/reactions.get",
      "description": "Get a reaction",
      "help": "https://api.slack.com/methods/reactions.get",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: reactions:read)"
        },
        "full": {
          "required": false,
          "description": "If true always return the complete reaction list"
        },
        "file": {
          "required": false,
          "description": "File to get reactions for."
        },
        "file_comment": {
          "required": false,
          "description": "File comment to get reactions for."
        },
        "channel": {
          "required": false,
          "description": "Channel where the message to get reactions for was posted."
        },
        "timestamp": {
          "required": false,
          "description": "Timestamp of the message to get reactions for."
        }
      },
      "errors": {
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "file_not_found'": "File specified by file does not exist.",
        "file_comment_not_found'": "File comment specified by file_comment does not exist.",
        "message_not_found'": "Message specified by channel and timestamp does not exist.",
        "no_item_specified'": "file, file_comment, or combination of channel and timestamp was not specified.",
        "bad_timestamp'": "Value passed for timestamp was invalid.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    }
  },
  "rtm": {
    "start": {
      "url": "https://slack.com/api/rtm.start",
      "description": "This method starts a Real Time Messaging API session. Refer to the RTM API documentation for full details on how to use the RTM API.",
      "help": "https://api.slack.com/methods/rtm.start",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: client)"
        }
      },
      "errors": {
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    }
  },
  "search": {
    "all": {
      "url": "https://slack.com/api/search.all",
      "description": "This method allows to to search both messages and files in a single call.",
      "help": "https://api.slack.com/methods/search.all",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "query": {
          "required": true,
          "description": "Search query. May contains booleans, etc."
        },
        "sort": {
          "required": false,
          "description": "Return matches sorted by either score or timestamp."
        },
        "sort_dir": {
          "required": false,
          "description": "Change sort direction to ascending (asc) or descending (desc)."
        },
        "highlight": {
          "required": false,
          "description": "Pass a value of 1 to enable query highlight markers (see below)."
        },
        "count": {
          "required": false,
          "description": "Number of items to return per page."
        },
        "page": {
          "required": false,
          "description": "Page number of results to return."
        }
      },
      "errors": {
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user."
      }
    },
    "files": {
      "url": "https://slack.com/api/search.files",
      "description": "This method returns files matching a search query.",
      "help": "https://api.slack.com/methods/search.files",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "query": {
          "required": true,
          "description": "Search query. May contains booleans, etc."
        },
        "sort": {
          "required": false,
          "description": "Return matches sorted by either score or timestamp."
        },
        "sort_dir": {
          "required": false,
          "description": "Change sort direction to ascending (asc) or descending (desc)."
        },
        "highlight": {
          "required": false,
          "description": "Pass a value of 1 to enable query highlight markers (see below)."
        },
        "count": {
          "required": false,
          "description": "Number of items to return per page."
        },
        "page": {
          "required": false,
          "description": "Page number of results to return."
        }
      },
      "errors": {
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user."
      }
    },
    "messages": {
      "url": "https://slack.com/api/search.messages",
      "description": "This method returns messages matching a search query.",
      "help": "https://api.slack.com/methods/search.messages",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "query": {
          "required": true,
          "description": "Search query. May contains booleans, etc."
        },
        "sort": {
          "required": false,
          "description": "Return matches sorted by either score or timestamp."
        },
        "sort_dir": {
          "required": false,
          "description": "Change sort direction to ascending (asc) or descending (desc)."
        },
        "highlight": {
          "required": false,
          "description": "Pass a value of 1 to enable query highlight markers (see below)."
        },
        "count": {
          "required": false,
          "description": "Number of items to return per page."
        },
        "page": {
          "required": false,
          "description": "Page number of results to return."
        }
      },
      "errors": {
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user."
      }
    }
  },
  "stars": {
    "list": {
      "url": "https://slack.com/api/stars.list",
      "description": "This method lists the items starred by a user.",
      "help": "https://api.slack.com/methods/stars.list",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "user": {
          "required": false,
          "description": "Show stars by this user. Defaults to the authed user."
        },
        "count": {
          "required": false,
          "description": "Number of items to return per page."
        },
        "page": {
          "required": false,
          "description": "Page number of results to return."
        }
      },
      "errors": {
        "user_not_found'": "Value passed for user was invalid",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user."
      }
    }
  },
  "users": {
    "getPresence": {
      "url": "https://slack.com/api/users.getPresence",
      "description": "This method lets you find out information about a user's presence. Consult the presence documentation for more details.",
      "help": "https://api.slack.com/methods/users.getPresence",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "user": {
          "required": true,
          "description": "User to get presence info on. Defaults to the authed user."
        }
      },
      "errors": {
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    },
    "info": {
      "url": "https://slack.com/api/users.info",
      "description": "This method returns information about a team member.",
      "help": "https://api.slack.com/methods/users.info",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "user": {
          "required": true,
          "description": "User to get info on"
        }
      },
      "errors": {
        "user_not_found'": "Value passed for user was invalid.",
        "user_not_visible'": "The requested user is not visible to the calling user",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    },
    "identity": {
      "url": "https://slack.com/api/users.identity",
      "description": "This method let's you retrieve a user's identity",
      "help": "https://api.slack.com/methods/users.identity",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: identity.basic)"
        }
      },
      "errors": {
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot": "This method cannot be called by a bot user."
      }
    },
    "list": {
      "url": "https://slack.com/api/users.list",
      "description": "This method returns a list of all users in the team. This includes deleted/deactivated users.",
      "help": "https://api.slack.com/methods/users.list",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: read)"
        },
        "presence": {
          "required": false,
          "description": "Whether to include presence data in the output"
        }
      },
      "errors": {
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    },
    "setActive": {
      "url": "https://slack.com/api/users.setActive",
      "description": "This method lets the slack messaging server know that the authenticated user is currently active. Consult the presence documentation for more details.",
      "help": "https://api.slack.com/methods/users.setActive",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        }
      },
      "errors": {
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team.",
        "user_is_bot'": "This method cannot be called by a bot user."
      }
    },
    "setPresence": {
      "url": "https://slack.com/api/users.setPresence",
      "description": "This method lets you set the calling user's manual presence. Consult the presence documentation for more details.",
      "help": "https://api.slack.com/methods/users.setPresence",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "presence": {
          "required": true,
          "description": "Either auto or away"
        }
      },
      "errors": {
        "invalid_presence'": "Value passed for presence was invalid.",
        "not_authed'": "No authentication token provided.",
        "invalid_auth'": "Invalid authentication token.",
        "account_inactive'": "Authentication token is for a deleted user or team."
      }
    }
  },
  "reactions": {
    "add": {
      "url": "https://slack.com/api/reactions.add",
      "description": "This method adds a reaction (emoji) to an item (file, file comment, channel message, group message, or direct message). One of file, file_comment, or the combination of channel and timestamp must be specified.",
      "help": "https://api.slack.com/methods/reactions.add",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "name": {
          "required": true,
          "description": "Reaction (emoji) name."
        },
        "file": {
          "required": false,
          "description": "File to add reaction to."
        },
        "file_comment": {
          "required": false,
          "description": "File comment to add reaction to."
        },
        "channel": {
          "required": false,
          "description": "Channel where the message to add reaction to was posted."
        },
        "timestamp": {
          "required": false,
          "description": "Timestamp of the message to add reaction to."
        }
      },
      "errors": {
        "bad_timestamp": "Value passed for timestamp was invalid.",
        "file_not_found": "File specified by file does not exist.",
        "file_comment_not_found": "File comment specified by file_comment does not exist.",
        "message_not_found": "Message specified by channel and timestamp does not exist.",
        "no_item_specified": "file, file_comment, or combination of channel and timestamp was not specified.",
        "invalid_name": "Value passed for name was invalid.",
        "already_reacted": "The specified item already has the user/reaction combination.",
        "too_many_emoji": "The limit for distinct reactions (i.e emoji) on the item has been reached.",
        "too_many_reactions": "The limit for reactions a person may add to the item has been reached.",
        "not_authed": "No authentication token provided.",
        "invalid_auth": "Invalid authentication token.",
        "account_inactive": "Authentication token is for a deleted user or team."
      }
    },
    "get": {
      "url": "https://slack.com/api/reactions.get",
      "description": "This method returns a list of all reactions for a single item (file, file comment, channel message, group message, or direct message).",
      "help": "https://api.slack.com/methods/reactions.get",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "full": {
          "required": false,
          "description": "If true always return the complete reaction list."
        },
        "file": {
          "required": false,
          "description": "File to add reaction to."
        },
        "file_comment": {
          "required": false,
          "description": "File comment to add reaction to."
        },
        "channel": {
          "required": false,
          "description": "Channel where the message to add reaction to was posted."
        },
        "timestamp": {
          "required": false,
          "description": "Timestamp of the message to add reaction to."
        }
      },
      "errors": {
        "bad_timestamp": "Value passed for timestamp was invalid.",
        "file_not_found": "File specified by file does not exist.",
        "file_comment_not_found": "File comment specified by file_comment does not exist.",
        "message_not_found": "Message specified by channel and timestamp does not exist.",
        "no_item_specified": "file, file_comment, or combination of channel and timestamp was not specified.",
        "not_authed": "No authentication token provided.",
        "invalid_auth": "Invalid authentication token.",
        "account_inactive": "Authentication token is for a deleted user or team."
      }
    },
    "list": {
      "url": "https://slack.com/api/reactions.list",
      "description": "This method returns a list of all items (file, file comment, channel message, group message, or direct message) reacted to by a user.",
      "help": "https://api.slack.com/methods/reactions.list",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "user": {
          "required": false,
          "description": "Show reactions made by this user. Defaults to the authed user."
        },
        "full": {
          "required": false,
          "description": "If true always return the complete reaction list."
        },
        "count": {
          "required": false,
          "description": "Number of items to return per page."
        },
        "page": {
          "required": false,
          "description": "Page number of results to return."
        }
      },
      "errors": {
        "user_not_found": "Value passed for user was invalid.",
        "not_authed": "No authentication token provided.",
        "invalid_auth": "Invalid authentication token.",
        "account_inactive": "Authentication token is for a deleted user or team."
      }
    },
    "remove": {
      "url": "https://slack.com/api/reactions.remove",
      "description": "This method removes a reaction (emoji) from an item (file, file comment, channel message, group message, or direct message). One of file, file_comment, or the combination of channel and timestamp must be specified.",
      "help": "https://api.slack.com/methods/reactions.remove",
      "arguments": {
        "token": {
          "required": true,
          "description": "Authentication token (Requires scope: post)"
        },
        "name": {
          "required": true,
          "description": "Reaction (emoji) name."
        },
        "file": {
          "required": false,
          "description": "File to add reaction to."
        },
        "file_comment": {
          "required": false,
          "description": "File comment to add reaction to."
        },
        "channel": {
          "required": false,
          "description": "Channel where the message to add reaction to was posted."
        },
        "timestamp": {
          "required": false,
          "description": "Timestamp of the message to add reaction to."
        }
      },
      "errors": {
        "bad_timestamp": "Value passed for timestamp was invalid.",
        "file_not_found": "File specified by file does not exist.",
        "file_comment_not_found": "File comment specified by file_comment does not exist.",
        "message_not_found": "Message specified by channel and timestamp does not exist.",
        "no_item_specified": "file, file_comment, or combination of channel and timestamp was not specified.",
        "invalid_name": "Value passed for name was invalid.",
        "no_reaction": "The specified item does not have the user/reaction combination.",
        "not_authed": "No authentication token provided.",
        "invalid_auth": "Invalid authentication token.",
        "account_inactive": "Authentication token is for a deleted user or team."
      }
    }
  }
}
